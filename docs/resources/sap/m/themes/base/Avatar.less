/* ============================= */
/* CSS for control sap.m/Avatar  */
/* Base theme                    */
/* ============================= */

.sapFAvatar {
	display: inline-block;
	position: relative;
}

// Define a loop and go trough 10 color sets
.loop-colors(@i: 1) when (@i =< 10) {
	.generateColor(@i);

	.loop-colors(@i + 1); // Execute next loop iteration
}

// Execute Loop through color sets
.loop-colors(1);

// Create classes which would just set background color of Avatar
.generateColor (@accentIndex) {
	@css-selector: ~"sapFAvatarColorAccent@{accentIndex}"; // Create the css selector string
	@color-param: ~"sapUiAccent@{accentIndex}"; // Build the color param which is a sapUiAccent

	// Build the real CSS selector.
	// The output would be something like this: .sapFAvatar.sapFAvatarColorAccent6 {background-color: #0092d1;}
	.@{css-selector} {
		background-color: @@color-param;
	}
}

.sapFAvatarIcon {
	text-align: center;
	color: @sapUiContentImagePlaceholderForegroundColor;

	.sapUiIcon {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		-webkit-transform: translate(-50%, -50%);
	}
}

.sapFAvatarColorTransparent {
	background-color: transparent;

	&.sapFAvatarIcon,
	&>.sapFAvatarInitialsHolder {
		color: @sapUiContentIconColor;
	}
}

.sapFAvatarColorTileIcon {
	background-color: @sapUiTileIconColor;
}

.sapFAvatarColorPlaceholder {
	background-color: @sapUiContentImagePlaceholderBackground;
}

.sapFAvatarInitialsHolder {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	-webkit-transform: translate(-50%, -50%);
}

.sapFAvatarImage {
	text-align: center;
	background-color: transparent;

	.sapUiIcon, .sapFAvatarInitialsHolder {
		display: none;
	}
}

.sapFAvatarImageHolder {
	background: no-repeat center;
	display: block;
	position: absolute;
	left: 0;
	top: 0;
	right: 0;
	bottom: 0;
	.sapFAvatar:not(.sapFAvatarImage) &
	{
		display: none;
	}
}

.sapFAvatarImageCover {
	background-size: cover;
}

.sapFAvatarImageContain {
	background-size: contain;
}

.sapFAvatarCircle {
	border-radius: 50%;
	-webkit-border-radius: 50%;

	.sapMImg,
	.sapFAvatarImageHolder {
		border-radius: 50%;
		-webkit-border-radius: 50%;
	}
}

.sapFAvatarXS {
	height: 2rem;
	width: 2rem;
	font-size: 1rem;

	.sapFAvatarInitialsHolder {
		font-size: 0.75rem;
	}
}

.sapFAvatarS {
	height: 3rem;
	width: 3rem;
	font-size: 1.5rem;

	.sapFAvatarInitialsHolder {
		font-size: 1.125rem;
	}
}

.sapFAvatarM {
	height: 4rem;
	width: 4rem;
	font-size: 2rem;

	.sapFAvatarInitialsHolder {
		font-size: 1.625rem;
	}
}

.sapFAvatarL {
	height: 5rem;
	width: 5rem;
	font-size: 2.5rem;

	.sapFAvatarInitialsHolder {
		font-size: 2rem;
	}
}

.sapFAvatarXL {
	height: 7rem;
	width: 7rem;
	font-size: 3rem;

	.sapFAvatarInitialsHolder {
		font-size: 2.75rem;
	}
}

.sapFAvatarFocusable:focus {
	outline: 0.0625rem dotted @sapUiContentFocusColor;
}

html[data-sap-ui-browser^="ie"] .sapFAvatarFocusable:focus,
html[data-sap-ui-browser^="ed"] .sapFAvatarFocusable:focus {
	outline-style: dashed;
}

html:not(.sap-desktop) .sapFAvatarFocusable:focus {
	outline: none;
}

.sapFAvatarInitialsHolder {
	color: @sapUiContentImagePlaceholderForegroundColor;
}

// Apply LightBox Magnifying glass mixin to control
.lightBoxMagnifyingGlassMixing(~".sapFAvatar", ~".sapFAvatarMagnifyingGlass");


//restrinct inner elements of blocking press event of the whole control
.sapFAvatar * {
	pointer-events: none;
}